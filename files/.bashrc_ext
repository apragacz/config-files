#!/bin/bash

#
# Bash PATH setup
#
PATH="$PATH:$HOME/.local/bin"

# Additional Python path for Mac OS:
if [ -d "$HOME/Library/Python/2.7/bin" ]; then
    PATH="$PATH:$HOME/Library/Python/2.7/bin"
fi

PATH="$PATH:$HOME/config-files/scripts"
export PATH

#
# Bash prompt setup
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (git \1)/'
}

parse_kubectl_context() {
    local k8s_ctx
    k8s_ctx="$(kubectl config current-context)"
    if [ -n "$k8s_ctx" ]; then
        echo "[k8s $k8s_ctx] "
    fi
}

build_prompt () {
    local prompt=''
    local kube_ctx_in_prompt
    local git_branch_in_prompt

    kube_ctx_in_prompt=${BASH_PROMPT_KUBERNETES_CONTEXT:-yes}
    git_branch_in_prompt=${BASH_PROMPT_GIT_BRANCH:-yes}

    if [ "$kube_ctx_in_prompt" == "yes" ] && command -v kubectl > /dev/null; then
        prompt+='$(eval "parse_kubectl_context" 2> /dev/null)'
    fi

    prompt+='${debian_chroot:+($debian_chroot)}'

    # user and hostname
    if [ "$(id -u)" = "0" ]; then
        prompt+='\[\033[01;31m\]'
    else
        prompt+='\[\033[01;32m\]'
    fi
    prompt+='\u@\h'

    # separator
    prompt+='\[\033[00m\]:'

    # working directory
    prompt+='\[\033[01;34m\]\w'

    if [ "$git_branch_in_prompt" = "yes" ] && command -v git > /dev/null; then
        prompt+='\[\033[33m\]$(eval "parse_git_branch" 2> /dev/null)'
    fi
    prompt+='\[\033[00m\]\n'
    if [ "$(id -u)" = "0" ]; then
        prompt+='#'
    else
        prompt+='\$'
    fi
    prompt+=' '

    echo "$prompt"
}

reload_prompt() {
    PS1="$(build_prompt)"
}

PS1="$(build_prompt)"

if command -v vim > /dev/null; then
    export EDITOR="vim"
fi

#
# Aliases
#
alias ll='ls -l'
alias la='ls -la'
alias cwd-reattach='cd "$(pwd)"'

#
# Bash history setup
#
export HHCONFIG=hicolor
shopt -s histappend
export HISTFILESIZE=100000
export HISTSIZE=100000
export HISTFILE=~/.bash_history
export HISTCONTROL=ignoreboth
export HISTIGNORE='ls:bg:fg:history:pwd:ll'
PROMPT_COMMAND='history -a ; history -c ; history -r; $PROMPT_COMMAND'

if [[ $- =~ .*i.* ]]; then
    # Use hist-find for reverse history search; if not found, fallback to hh if it is found.
    if which hist-find > /dev/null; then
         bind '"\C-r": "\C-a hist-find -- \C-j"'
    elif which hh > /dev/null; then
        bind '"\C-r": "\C-a hh -- \C-j"'
    fi
fi
